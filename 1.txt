const db = require('../db/db');
const jwt = require('jsonwebtoken');
const bcrypt = require('bcrypt');

module.exports = {
  async studentLogin(req, res) {
    const { email, password } = req.body;

    if (!email || !password) {
      return res.status(400).json({ message: 'Email and password are required.' });
    }

    try {
      const query = 'SELECT * FROM students WHERE email = ?';
      db.query(query, [email], async (err, results) => {
        if (err) {
          console.error('Error fetching student:', err);
          return res.status(500).json({ message: 'An error occurred during login.' });
        }

        if (results.length === 0) {
          return res.status(404).json({ message: 'Student not found.' });
        }

        const student = results[0];

        // Compare passwords
        const isPasswordValid = await bcrypt.compare(password, student.password);
        if (!isPasswordValid) {
          return res.status(401).json({ message: 'Invalid email or password.' });
        }

        // Generate JWT token
        const token = jwt.sign(
          { studentId: student.id, class: student.class },
          process.env.JWT_SECRET,
          { expiresIn: '1h' }
        );

        res.status(200).json({ message: 'Login successful', token });
      });
    } catch (error) {
      console.error('Error during student login:', error);
      res.status(500).json({ message: 'An error occurred during login.' });
    }
  },
};










module.exports = {
  async getStudentHomework(req, res) {
    const studentClass = req.user.class;

    if (!studentClass) {
      return res.status(400).json({ message: 'Student class is required.' });
    }

    const query = 'SELECT title, topic, subject FROM homework WHERE class = ?';
    db.query(query, [studentClass], (err, results) => {
      if (err) {
        console.error('Error fetching homework:', err);
        return res.status(500).json({ message: 'Failed to fetch homework.' });
      }
      res.status(200).json(results);
    });
  },
};













const jwt = require('jsonwebtoken');

module.exports = {
  authenticateStudent(req, res, next) {
    const token = req.headers.authorization?.split(' ')[1];
    if (!token) {
      return res.status(401).json({ message: 'Access denied. No token provided.' });
    }

    try {
      const decoded = jwt.verify(token, process.env.JWT_SECRET);
      req.user = decoded;
      next();
    } catch (error) {
      res.status(403).json({ message: 'Invalid or expired token.' });
    }
  },
};















<form id="studentLoginForm">
  <input type="email" id="studentEmail" placeholder="Email" required />
  <input type="password" id="studentPassword" placeholder="Password" required />
  <button type="submit">Login</button>
</form>














document.getElementById('studentLoginForm').addEventListener('submit', async (e) => {
  e.preventDefault();

  const email = document.getElementById('studentEmail').value.trim();
  const password = document.getElementById('studentPassword').value.trim();

  try {
    const response = await fetch('/api/student/login', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ email, password }),
    });

    const result = await response.json();
    if (!response.ok) {
      alert(result.message || 'Failed to log in.');
      return;
    }

    // Save token and redirect to homework page
    localStorage.setItem('studentToken', result.token);
    alert('Login successful!');
    window.location.href = '/student-dashboard.html';
  } catch (error) {
    console.error('Error logging in:', error);
    alert('An error occurred. Please try again.');
  }
});













document.addEventListener('DOMContentLoaded', async () => {
  const token = localStorage.getItem('studentToken');
  if (!token) {
    alert('You must log in to view your homework.');
    window.location.href = '/student-login.html';
    return;
  }

  try {
    const response = await fetch('/api/student/homework', {
      method: 'GET',
      headers: { Authorization: `Bearer ${token}` },
    });

    if (!response.ok) {
      alert('Failed to fetch homework.');
      return;
    }

    const homework = await response.json();
    const tableBody = document.getElementById('studentHomeworkBody');
    tableBody.innerHTML = '';

    homework.forEach((item) => {
      const row = `<tr><td>${item.title}</td><td>${item.topic}</td><td>${item.subject}</td></tr>`;
      tableBody.innerHTML += row;
    });
  } catch (error) {
    console.error('Error fetching homework:', error);
    alert('An error occurred. Please try again.');
  }
});









